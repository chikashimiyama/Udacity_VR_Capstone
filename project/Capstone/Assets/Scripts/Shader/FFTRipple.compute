#pragma kernel FFTRipple

#define FFTSize 512
#define NumberOfRipples 32
#define LastBin FFTSize-1
#define Scaler 10000.0

RWStructuredBuffer<float> Data;
RWStructuredBuffer<float> UpdatedData;
RWStructuredBuffer<uint> CentroidData;
RWStructuredBuffer<uint> SumData;

[numthreads(FFTSize,1,1)]
void FFTRipple (uint threadId : SV_GroupThreadID, uint groupId : SV_GroupID)
{
    if(groupId != NumberOfRipples) // push one circle
        Data[(groupId+1) * FFTSize + threadId] = Data[groupId * FFTSize + threadId];
        
    if(groupId == 0 ) // copy from cpu
        Data[threadId] = UpdatedData[threadId];
    
    int index = groupId * FFTSize + threadId;
    float magnitude = Data[index];
    
    InterlockedAdd(CentroidData[groupId], (uint)(magnitude * threadId * Scaler));
    InterlockedAdd(SumData[groupId], (uint)(magnitude * Scaler));
    
    AllMemoryBarrierWithGroupSync();

    if(threadId == LastBin)
    {
        CentroidData[groupId] = CentroidData[groupId] / SumData[groupId];
    }
    
}
